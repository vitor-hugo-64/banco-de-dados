-- CRIAÇÃO DE TABELA --
CREATE TABLE C_ALUNO(
    COD_ALUNO INTEGER NOT NULL,
    NOME VARCHAR2(30),
    CIDADE VARCHAR2(30),
    CEP VARCHAR(10)
);

-- INSERÇÃO DA PRIMARY KEY --
ALTER TABLE C_ALUNO
ADD CONSTRAINT PK_ALUNO
PRIMARY KEY(COD_ALUNO);

-- SELECT BÁSICO --
SELECT * FROM C_ALUNO;

-- INSERÇÕES BÁSICAS --
INSERT INTO C_ALUNO(COD_ALUNO, NOME, CIDADE, CEP)
VALUES( 1, 'FULANO DA SILVA', 'NOVO HAMBURGO', 93700000);

INSERT INTO C_ALUNO(COD_ALUNO, NOME, CIDADE, CEP)
VALUES( 2, 'BEUTRANO DE SOUZA', 'SAPIRANGA', 93700000);

INSERT INTO C_ALUNO(COD_ALUNO, NOME, CIDADE, CEP)
VALUES( 3, 'CICLANO DA ROSA', 'CAMPO BOM', 93700000);

INSERT INTO C_ALUNO(COD_ALUNO, NOME, CIDADE, CEP)
VALUES( 4, 'BADANHA BADANHA', 'CAMPO BOM', 93700000);

-- CRIAÇÃO DE OUTRA TABELA --
CREATE TABLE C_CURSO(
    COD_CURSO INTEGER NOT NULL,
    NOME VARCHAR2(30),
    VALOR NUMBER(8,2),
    CARGA_HORARIA INTEGER
);

-- INSERÇÃO DA PRIMARY KEY --
ALTER TABLE C_CURSO
ADD CONSTRAINT PK_CURSO
PRIMARY KEY(COD_CURSO);

-- SELECT DA TABELA CRIADA ANTERIORMENTE --
SELECT COD_CURSO, NOME, VALOR, CARGA_HORARIA FROM C_CURSO;

-- INSERÇÃO DE VALORES --
INSERT INTO C_CURSO VALUES( 1, 'ORACLE', 500, 25);
INSERT INTO C_CURSO VALUES( 2, 'JAVA', 750, 20);
INSERT INTO C_CURSO VALUES( 3, 'PHP', 450, 30);
INSERT INTO C_CURSO VALUES( 4, 'MYSQL', 400, 25);

-- CRIAÇÃO DE NOVA TABELA --
CREATE TABLE C_CONTRATO(
    COD_CONTRATO INTEGER NOT NULL,
    DATA DATE,
    COD_ALUNO INTEGER,
    TOTAL NUMBER(8,2),
    DESCONTO NUMBER(5,2)
);

-- INSERÇÃO DE PRIMARY KEY --
ALTER TABLE C_CONTRATO
ADD CONSTRAINT PK_CONTRATO
PRIMARY KEY(COD_CONTRATO);

-- INSERÇÃO DE FOREIGN KEY --
ALTER TABLE C_CONTRATO
ADD CONSTRAINT FK_CONTRATO_ALUNO
FOREIGN KEY(COD_ALUNO) REFERENCES C_ALUNO(COD_ALUNO);

-- INSERÇÃO DE VALORES --
INSERT INTO C_CONTRATO VALUES( 1, SYSDATE, 1, 500, 10);
INSERT INTO C_CONTRATO VALUES( 2, SYSDATE, 2, 500, 10);
INSERT INTO C_CONTRATO VALUES( 3, SYSDATE, 3, 1500, 05);
INSERT INTO C_CONTRATO VALUES( 4, SYSDATE, 4, 1600, 10);
INSERT INTO C_CONTRATO VALUES( 5, SYSDATE - 1, 2, 1600, 10);
INSERT INTO C_CONTRATO VALUES( 6, SYSDATE - 2, 1, 1600, 10);

-- SELECT BÁSICO --
SELECT COD_CONTRATO, DATA, COD_ALUNO, TOTAL, DESCONTO FROM C_CONTRATO;

-- INSERINDO COLUNA --
ALTER TABLE C_CONTRATO
ADD COL_TESTE VARCHAR(50);

-- APAGANDO COLUNA --
ALTER TABLE C_CONTRATO
DROP COLUMN COL_TESTE;

-- ALTERAR NOME DE COLUNA --
ALTER TABLE C_ALUNO
RENAME COLUMN NOME TO NOME2;

SELECT NOME2 FROM C_ALUNO;

ALTER TABLE C_ALUNO
RENAME COLUMN NOME2 TO NOME;

SELECT NOME FROM C_ALUNO;

-- CRIANDO SEQUENCIA PARA INSERIR CHAVE PRIMÁRIA DE FORMA AUTOMÁTICA --
-- A SEQUENCIA TERÁ O NOME DE 'SEQ_ALUNO' E IRÁ COMEÇAR A PARTR DE NUMERO QUATRO --
CREATE SEQUENCE SEQ_ALUNO START WITH 5;

-- EXEMPLO DE APLICAÇÃO DA SEQUENCIA --
INSERT INTO C_ALUNO VALUES( SEQ_ALUNO.NEXTVAL, 'VITOR HUGO', 'CAMPO BOM', 93700000);

SELECT COD_ALUNO, NOME, CIDADE, CEP FROM C_ALUNO;

-- VERIFICAR A DATA ATUAL DO SERVIDOR --
-- 'DUAL' É UMA TABELA QUE NÃO EXISTE E SERVE SIMPLISMENTE PARA COMPLETAR A SINTAXE
SELECT SYSDATE FROM DUAL;

-- PEGAR PRÓXIMO VALOR DA SEQUENCIA --
SELECT SEQ_ALUNO.CURRVAL FROM DUAL;

-- CONFIRMAR TODAS AS ALTERAÇÕES PARA QUE NÃO SEJAM MAIS ALTERADAS PELO ROLLBACK --
COMMIT;

-- DELETA TODOS OS REGISTRO DA TABELA C_ALUNO --
DELETE FROM C_ALUNO;

-- DESFAZ TODAS AS ALTERAÇÕES NÃO COMMITADAS --
ROLLBACK;

-- DELETAR UM REGISTRO --
DELETE FROM C_ALUNO WHERE COD_ALUNO = 5;

-- SELECIONAR UM UNICO REGISTRO --
SELECT COD_ALUNO, NOME, CIDADE, CEP FROM C_ALUNO WHERE COD_ALUNO = 5;

-- CRIANDO UMA NOVA TABELA --
CREATE TABLE C_ITEM_CONTRATO(
    COD_ITEM INTEGER NOT NULL,
    COD_CURSO INTEGER,
    COD_CONTRATO INTEGER,
    VALOR NUMBER(8,2)
);

-- ADICIONANDO CHAVE PRIMÁRIA --
ALTER TABLE C_ITEM_CONTRATO
ADD CONSTRAINT PK_ITEM_CONTRATO
PRIMARY KEY(COD_ITEM);

-- ADICIONANDO CHAVE ESTRANGEIRA --
ALTER TABLE C_ITEM_CONTRATO
ADD CONSTRAINT FK_ITEM_CURSO
FOREIGN KEY(COD_CURSO) REFERENCES C_CURSO(COD_CURSO);

ALTER TABLE C_ITEM_CONTRATO
ADD CONSTRAINT FK_ITEM_CONTRATO
FOREIGN KEY(COD_CONTRATO) REFERENCES C_CONTRATO(COD_CONTRATO);

-- ADICIONANDO REGISTROS --
INSERT INTO C_ITEM_CONTRATO VALUES( 1, 1, 1, 500);
INSERT INTO C_ITEM_CONTRATO VALUES( 2, 1, 2, 500);
INSERT INTO C_ITEM_CONTRATO VALUES( 3, 3, 3, 1500);
INSERT INTO C_ITEM_CONTRATO VALUES( 4, 4, 4, 1600);
INSERT INTO C_ITEM_CONTRATO VALUES( 5, 1, 5, 500);
INSERT INTO C_ITEM_CONTRATO VALUES( 6, 1, 6, 500);
INSERT INTO C_ITEM_CONTRATO VALUES( 7, 2, 6, 500);
INSERT INTO C_ITEM_CONTRATO VALUES( 8, 3, 7, 500);

-- ALTERA REGISTRO NA TABELA C_CONTRATO ONDE O COD_CONTRATO É IGUAL A 18 --
UPDATE C_CONTRATO SET
DESCONTO = 18
WHERE COD_CONTRATO = 2;

-- ALETRA MULTIPLOS REGISTROS --
UPDATE C_CONTRATO SET
    DESCONTO = 20,
    DATA = '15/06/2013',
    TOTAL = 750
WHERE COD_CONTRATO = 2;

-- ALETRA O VALOR DE UMA COLUNA ONDE DETERMINADA COLUNA JÁ POSSUI TAL VALOR --
-- NESSE CASO ELE VAI INSERIR 'UBERLANDIA' EM TODOS OS REGISTROS ONDE CIDADE FOR IGUAL A 'NOVO HAMBURGO' --
UPDATE C_ALUNO SET
    CIDADE = 'UBERLANDIA'
WHERE UPPER(CIDADE) = 'NOVO HAMBURGO';

-- ALTERA O NOME ONDE 'COD_ALUNO' FOR IGUAL A 1 --
UPDATE C_ALUNO SET
    NOME = 'FULANINHO'
WHERE COD_ALUNO = 1;

UPDATE C_CURSO SET
    VALOR = 499.99
WHERE COD_CURSO = 1;

COMMIT;

--------------------------------------------------------------------------------------------------------------------------------

-- CALCULO NAS COLUNAS --
-- Round - É UMA FUNÇÃO DO ORACLE QUE ARREDONDA O NUMERO DE CASOS DECIMAIS, VOCE COLOCA A CONTA DENTRO DO PARENTESES E DEPOIS DA VIRGULA SE INFORMA O NUMERO DE CASAS DECIMAIS --
SELECT NOME AS CURSO, VALOR, VALOR/CARGA_HORARIA, Round(VALOR/CARGA_HORARIA, 2) AS VALOR_HORA
FROM C_CURSO
ORDER BY VALOR_HORA;

-- SELECT BÁSICO NA TABELA C_CONTRATO --
SELECT * FROM C_CONTRATO;

-- UPDATE NA TABELA C_CONTRATO --
-- VAI ATUALIZAR A COLUNA DESCONTO DO REGISTRO 4 PRA NULO --
UPDATE C_CONTRATO
SET DESCONTO = NULL
WHERE COD_ALUNO = 4;

-- FAZER CONTA COM NULOS SIMPLISMENTE ANULA O RESULTADO --
SELECT COD_CONTRATO, TOTAL, DESCONTO, (TOTAL - DESCONTO) FROM C_CONTRATO;

-- A FUNÇÃO Mvl() SERVE PRA TRATAR FUNÇÕES NULAS, PRIMEIRO SE INFORMA A COLUNA QUE DEVE SER TRATADA E DEPOIS DA VÍRGULA É INSERIDO O DADO QUE SE DEJESA APRESENTAR NO LUGAR DO NULO --
-- ENTÃO EM CASOS ONDE É UMA POSSÍBILIDADE QUE UMA COLUNA SEJA NULA É SEMPRE BOM USAR O 'NVL'
SELECT COD_CONTRATO, TOTAL, Nvl(DESCONTO, 0) FROM C_CONTRATO;

-- CONCATENAÇÃO --
SELECT COD_ALUNO || ' - '|| NOME || ' // ' || CIDADE AS ALUNO FROM C_ALUNO ORDER BY COD_ALUNO;

-- ADIÇÃO DE COLUNAS --
-- QUANDO SE INSERE UMA COLUNA NOVA DEPOIS QUE A TABELA JÁ ESTÁ POPULADA O FAZ COM QUE TODOS OS REGISTROS TENHA DE INICIO O DADO INFORMADO NELE --
ALTER TABLE C_ALUNO ADD ESTADO CHAR(2) DEFAULT 'RS';
ALTER TABLE C_ALUNO ADD SALARIO NUMBER( 8,2) DEFAULT 620;

SELECT * FROM C_ALUNO;

-- UPDATE --
UPDATE C_ALUNO SET
ESTADO = 'MT', SALARIO = 800
WHERE COD_ALUNO = 2;

UPDATE C_ALUNO SET
ESTADO = 'SP', SALARIO = 800
WHERE COD_ALUNO = 4;

COMMIT;

SELECT * FROM C_ALUNO
WHERE ESTADO <> 'RS'
AND SALARIO <= 800
ORDER BY SALARIO DESC;

DROP SEQUENCE SEQ_ALUNO;

CREATE SEQUENCE SEQ_ALUNO START WITH 1;

-- ORDENAÇÃO --
SELECT ESTADO, SALARIO, NOME FROM C_ALUNO ORDER BY ESTADO, SALARIO DESC;

-- ADICAO DE COLUNA COM DATA --
ALTER TABLE C_ALUNO ADD NASCIMENTO DATE DEFAULT SYSDATE;

-- SELECIONA A DATA ATUAL DO SISTEMA --
SELECT SYSDATE FROM DUAL;

-- SELECIONA A DATA ATUAL MENOS 100 DIAS --
SELECT (SYSDATE - 100) FROM DUAL;

-- UPDATES NOVOS --
UPDATE C_ALUNO SET
NASCIMENTO = '10/10/2001'
WHERE COD_ALUNO = 1;

UPDATE C_ALUNO SET
NASCIMENTO = '10/08/2000'
WHERE COD_ALUNO = 2;

SELECT * FROM C_ALUNO;

-- Trunc() É UMA FUNÇÃO QUE SERVE PARA TIRAR A HORA DE CAMPOS DE DATA -- 
SELECT COD_ALUNO, NASCIMENTO, Trunc(NASCIMENTO), NOME
FROM C_ALUNO
WHERE Trunc(NASCIMENTO) = '09/04/2018';

-- PEGAR UMA DATA QUE ESTEJA ENTRE DETERMINADO PERIODO --
SELECT COD_ALUNO, NASCIMENTO, Trunc(NASCIMENTO) AS NASCIMENTO, NOME
FROM C_ALUNO
WHERE NASCIMENTO
BETWEEN TO_DATE('25/08/2010 22:00', 'DD/MM/YYYY HH24:MI')-- O PRIMAEIRO FORMATO É A HORA A SER FILTRADA E O ULTIMO FORMATO DE HORA É O FORMATO A SER CONSIDERADO NA HORA DE FAZER A CONSULTA --
AND TO_DATE('10/04/2018 23:55', 'DD/MM/YYYY HH24:MI');


--------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------------









-- *** TRIGGER *** --
-- ESTRUTURA BÁSICA DE UMA TRIGGER --
CREATE OR REPLACE TRIGGER NOME_TRIGGER -- CRIA A TRIGGER
AFTER INSERT ON NOME_TABELA -- DECIDE SE SERÁ EXECUTADA ANTES OU DEPOIS DE UMA INSERT, DELETE, UPDATE
DECLARE -- DECLARA VARIÁVREIS
BEGIN -- COMECA O ESCOPO
    -- AQUI IRÁ SER COLOCADO OS COMANDOS
END; -- TERMINA O ESCOPO